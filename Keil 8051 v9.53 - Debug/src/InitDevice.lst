C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/02/2016 16:54:44 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\clfilho
                    -\SimplicityStudio\v3_workspace\myProject\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOAT
                    -FUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/Users/clfilho/SimplicityStudio/v3_workspace/myProject/
                    -inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudi
                    -o/v3/developer/sdks/si8051/v3//Device/EFM8BB3;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8BB
                    -3/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              PORTS_0_enter_DefaultMode_from_RESET();
  27   1              PBCFG_0_enter_DefaultMode_from_RESET();
  28   1              CMP_0_enter_DefaultMode_from_RESET();
  29   1              HFOSC_0_enter_DefaultMode_from_RESET();
  30   1              CIP51_0_enter_DefaultMode_from_RESET();
  31   1              CLOCK_0_enter_DefaultMode_from_RESET();
  32   1              // Restore the SFRPAGE
  33   1              SFRPAGE = SFRPAGE_save;
  34   1              // [Config Calls]$
  35   1      
  36   1      }
  37          
  38          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
  39   1              // $[XBR2 - Port I/O Crossbar 2]
  40   1              /*
  41   1               // Weak Pullups enabled 
  42   1               // Crossbar enabled
  43   1               // UART1 I/O unavailable at Port pin
  44   1               // UART1 RTS1 unavailable at Port pin
  45   1               // UART1 CTS1 unavailable at Port pin
  46   1               */
  47   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
  48   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
  49   1                              | XBR2_URT1CTSE__DISABLED;
  50   1              // [XBR2 - Port I/O Crossbar 2]$
  51   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/02/2016 16:54:44 PAGE 2   

  52   1              // $[PRTDRV - Port Drive Strength]
  53   1              // [PRTDRV - Port Drive Strength]$
  54   1      
  55   1              // $[XBR0 - Port I/O Crossbar 0]
  56   1              /*
  57   1               // UART0 I/O unavailable at Port pin
  58   1               // SPI I/O unavailable at Port pins
  59   1               // SMBus 0 I/O unavailable at Port pins
  60   1               // CP0 routed to Port pin
  61   1               // Asynchronous CP0 routed to Port pin
  62   1               // CP1 unavailable at Port pin
  63   1               // Asynchronous CP1 unavailable at Port pin
  64   1               // SYSCLK unavailable at Port pin
  65   1               */
  66   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
  67   1                              | XBR0_CP0E__ENABLED | XBR0_CP0AE__ENABLED | XBR0_CP1E__DISABLED
  68   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
  69   1              // [XBR0 - Port I/O Crossbar 0]$
  70   1      
  71   1              // $[XBR1 - Port I/O Crossbar 1]
  72   1              // [XBR1 - Port I/O Crossbar 1]$
  73   1      
  74   1      }
  75          
  76          extern void CMP_0_enter_DefaultMode_from_RESET(void) {
  77   1              // $[CMP0MX - Comparator 0 Multiplexer Selection]
  78   1              /*
  79   1               // External pin CMP0P.1
  80   1               // External pin CMP0N.15
  81   1               */
  82   1              uint8_t delay;
  83   1      
  84   1              CMP0MX = CMP0MX_CMXP__CMP0P1 | CMP0MX_CMXN__CMP0N15;
  85   1              // Delay to allow the comparator inputs to settle
  86   1              for (delay = 0; delay < 0x20; delay++)
  87   1                      ;
  88   1              // [CMP0MX - Comparator 0 Multiplexer Selection]$
  89   1      
  90   1              // $[CMP0CN1 - Comparator 0 Control 1]
  91   1              /*
  92   1               // Internal Comparator DAC Reference Level = 0x1F
  93   1               // The comparator output will always reflect the input conditions
  94   1               */
  95   1              SFRPAGE = 0x30;
  96   1              CMP0CN1 = (0x1F << CMP0CN1_DACLVL__SHIFT) | CMP0CN1_CPINH__DISABLED;
  97   1              // [CMP0CN1 - Comparator 0 Control 1]$
  98   1      
  99   1              // $[CMP0MD - Comparator 0 Mode]
 100   1              /*
 101   1               // Mode 0 
 102   1               // Connect the CMP- input to the internal DAC output, and CMP+ is
 103   1               //     selected by CMXP. The internal DAC uses the signal specified by CMXN
 104   1               //     as its full-scale reference
 105   1               */
 106   1              SFRPAGE = 0x00;
 107   1              CMP0MD &= ~CMP0MD_CPMD__FMASK;
 108   1              CMP0MD |= CMP0MD_INSL__CMXP_DAC;
 109   1              // [CMP0MD - Comparator 0 Mode]$
 110   1      
 111   1              // $[CMP0CN0 - Comparator 0 Control 0]
 112   1              /*
 113   1               // Comparator enabled
 114   1               */
C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/02/2016 16:54:44 PAGE 3   

 115   1              CMP0CN0 |= CMP0CN0_CPEN__ENABLED;
 116   1              // [CMP0CN0 - Comparator 0 Control 0]$
 117   1      
 118   1      }
 119          
 120          extern void HFOSC_0_enter_DefaultMode_from_RESET(void) {
 121   1              // $[HFOCN - High Frequency Oscillator Control]
 122   1              /*
 123   1               // Force High Frequency Oscillator 0 to run
 124   1               // Disable High Frequency Oscillator 1 
 125   1               */
 126   1              SFRPAGE = 0x10;
 127   1              HFOCN = HFOCN_HFO0EN__ENABLED | HFOCN_HFO1EN__DISABLED;
 128   1              // [HFOCN - High Frequency Oscillator Control]$
 129   1      
 130   1      }
 131          
 132          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 133   1              // $[P0 - Port 0 Pin Latch]
 134   1              // [P0 - Port 0 Pin Latch]$
 135   1      
 136   1              // $[P0MDOUT - Port 0 Output Mode]
 137   1              /*
 138   1               // P0.0 output is push-pull
 139   1               // P0.1 output is push-pull
 140   1               // P0.2 output is open-drain
 141   1               // P0.3 output is open-drain
 142   1               // P0.4 output is open-drain
 143   1               // P0.5 output is open-drain
 144   1               // P0.6 output is open-drain
 145   1               // P0.7 output is open-drain
 146   1               */
 147   1              SFRPAGE = 0x00;
 148   1              P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__PUSH_PULL
 149   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 150   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 151   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 152   1              // [P0MDOUT - Port 0 Output Mode]$
 153   1      
 154   1              // $[P0MDIN - Port 0 Input Mode]
 155   1              /*
 156   1               // P0.0 pin is configured for digital mode
 157   1               // P0.1 pin is configured for digital mode
 158   1               // P0.2 pin is configured for analog mode
 159   1               // P0.3 pin is configured for digital mode
 160   1               // P0.4 pin is configured for digital mode
 161   1               // P0.5 pin is configured for digital mode
 162   1               // P0.6 pin is configured for digital mode
 163   1               // P0.7 pin is configured for digital mode
 164   1               */
 165   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__ANALOG
 166   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 167   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 168   1              // [P0MDIN - Port 0 Input Mode]$
 169   1      
 170   1              // $[P0SKIP - Port 0 Skip]
 171   1              /*
 172   1               // P0.0 pin is not skipped by the crossbar
 173   1               // P0.1 pin is not skipped by the crossbar
 174   1               // P0.2 pin is skipped by the crossbar
 175   1               // P0.3 pin is not skipped by the crossbar
 176   1               // P0.4 pin is not skipped by the crossbar
 177   1               // P0.5 pin is not skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        09/02/2016 16:54:44 PAGE 4   

 178   1               // P0.6 pin is not skipped by the crossbar
 179   1               // P0.7 pin is not skipped by the crossbar
 180   1               */
 181   1              P0SKIP = P0SKIP_B0__NOT_SKIPPED | P0SKIP_B1__NOT_SKIPPED
 182   1                              | P0SKIP_B2__SKIPPED | P0SKIP_B3__NOT_SKIPPED
 183   1                              | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 184   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 185   1              // [P0SKIP - Port 0 Skip]$
 186   1      
 187   1              // $[P0MASK - Port 0 Mask]
 188   1              // [P0MASK - Port 0 Mask]$
 189   1      
 190   1              // $[P0MAT - Port 0 Match]
 191   1              // [P0MAT - Port 0 Match]$
 192   1      
 193   1      }
 194          
 195          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 196   1              // $[HFOSC1 Setup]
 197   1              // [HFOSC1 Setup]$
 198   1      
 199   1              // $[CLKSEL - Clock Select]
 200   1              /*
 201   1               // Clock derived from the Internal High Frequency Oscillator 0
 202   1               // SYSCLK is equal to selected clock source divided by 1
 203   1               */
 204   1              SFRPAGE = 0x00;
 205   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 206   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 207   1                      ;
 208   1              // [CLKSEL - Clock Select]$
 209   1      
 210   1      }
 211          
 212          extern void CIP51_0_enter_DefaultMode_from_RESET(void) {
 213   1              // $[PFE0CN - Prefetch Engine Control]
 214   1              /*
 215   1               // SYSCLK < 50 MHz
 216   1               */
 217   1              PFE0CN = PFE0CN_FLRT__SYSCLK_BELOW_50_MHZ;
 218   1              // [PFE0CN - Prefetch Engine Control]$
 219   1      
 220   1      }
 221          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     95    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
