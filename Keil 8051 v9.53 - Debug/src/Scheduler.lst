C51 COMPILER V9.53.0.0   SCHEDULER                                                         09/15/2016 14:34:56 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE SCHEDULER
OBJECT MODULE PLACED IN .\src\Scheduler.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\clfilho
                    -\SimplicityStudio\v3_workspace\myProject - DAC Enabled\src\Scheduler.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGL
                    -EVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/Users/clfilho/SimplicityStudio/v3_workspa
                    -ce/myProject - DAC Enabled/inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/shared/si8051Base;C:/
                    -SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8BB3;C:/SiliconLabs/SimplicityStudio/v3/developer/sd
                    -ks/si8051/v3//Device/EFM8BB3/inc) PRINT(.\src\Scheduler.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\Scheduler.O
                    -BJ)

line level    source

   1          
   2          #include <SI_EFM8BB3_Register_Enums.h>                  // SFR declarations
   3          
   4          #include "PID.h"
   5          #include "Scheduler.h"
   6          
   7          /* Declaration of all the Tasks that will be performed by the scheduler *
   8           * All Tasks are disabled and period is set to 10 ticks by default * */
   9          //void Pot_Handler(void)
  10          
  11          
  12          xdata SYSTASKS tasks[MAX_TASKS] =
  13          {
  14              /*
  15               * period,  counter,    Enabled,  Function Pointer (To Object Handler that requires constant threat) *
             -/
  16          
  17              {   5,         0,      1,      &DACOutputHandler},
  18              {   10,         0,      1,      &PIDHandler},
  19          
  20          
  21          };
  22          
  23          
  24          /*This Function is called by the objects and update the flags*/
  25          
  26          /*void Update_task_Flags ( OBJFLAGS Flags , TASKSID tasknum)
  27          {
  28              tasks[tasknum].Flags = Flags;
  29          }*/
  30          
  31          /*This Function is called by the objects and update the period, which is how often every task should run*/
  32          void Update_task_period ( uint16_t period , TASKSID tasknum)
  33          {
  34   1          tasks[tasknum].period = period;
  35   1      }
  36          
  37          /*This is the Scheduler itself. It is called by the Timer 2 interrupt and then it jumps on the tasks
  38           * once the Task period matches. The priority is defined by the way they are listed on the TASKSID
  39           * enumeration. */
  40          
  41          
  42          void Scheduler_CallBack(void)
  43          {
  44   1      static TASKSID taskCounter;
  45   1      
  46   1       for (taskCounter = PID_TASK; taskCounter < MAX_TASKS; taskCounter++)
  47   1          {
  48   2              if (tasks[taskCounter].Enabled == 1)
  49   2              {
C51 COMPILER V9.53.0.0   SCHEDULER                                                         09/15/2016 14:34:56 PAGE 2   

  50   3                  if (tasks[taskCounter].counter++ == tasks[taskCounter].period)
  51   3                       {
  52   4                           (tasks[taskCounter].function)();
  53   4                           tasks[taskCounter].counter=0;
  54   4                       }
  55   3              }
  56   2       
  57   2          }
  58   1      
  59   1      
  60   1      
  61   1         // Buttons_Handler();
  62   1      }
  63          /**
  64            End of File
  65          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    147    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
